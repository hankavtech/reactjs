{"ast":null,"code":"var _jsxFileName = \"/home/kesha/Desktop/my-app/src/components/Tournaments.js\";\nimport React, { Component } from 'react';\nimport Events from './Events';\nexport default class Tournaments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getEvents = (tournament, type) => {\n      let filteredEvents = this.props.events.filter(function (event) {\n        return event.event_name === tournament && event.event_type === type;\n      });\n      return filteredEvents;\n    };\n  }\n  /*   componentDidMount(){\n        console.log(\"i am mounted\");\n        const url = `http://www.localhost:8000/${this.state.sport}/`;\n        fetch(url, {\n            // mode: 'no-cors',\n            method: 'GET',\n            headers: {\n              Accept: 'application/json',\n            },\n          },\n        )\n        .then(response => {\n        if (response.ok) {\n        response.json().then(json => {\n        console.log(json);\n        this.setState({events:json});\n        var flags=[];\n        var uniqueTournaments = [];\n        var index;\n        for (index = 0; index < this.state.events.length; ++index) {\n            var event=this.state.events[index];\n            var uniqueCombination=this.state.events[index].event_type+this.state.events[index].event_name;\n            if (!flags[uniqueCombination]) {\n                flags[uniqueCombination] = true;\n                uniqueTournaments.push({'event_name':event.event_name,'event_type':event.event_type});\n            }\n        }\n    \n         this.setState({tournaments:uniqueTournaments})\n        console.log(this.state.tournaments);\n        });\n        }\n        });\n    }\n    */\n\n\n  render() {\n    const tournamentDivItems = this.props.tournaments.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tournament_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 74\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"tournament_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 106\n      }\n    }, item.event_name, \" \\xA0 \\xA0 \", item.event_type)), /*#__PURE__*/React.createElement(Events, {\n      tournamentName: item.event_name,\n      events: this.getEvents(item.event_name, item.event_type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 196\n      }\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }\n    }, tournamentDivItems);\n  }\n\n}","map":{"version":3,"sources":["/home/kesha/Desktop/my-app/src/components/Tournaments.js"],"names":["React","Component","Events","Tournaments","constructor","props","getEvents","tournament","type","filteredEvents","events","filter","event","event_name","event_type","render","tournamentDivItems","tournaments","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAE/CG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAyClBC,SAzCkB,GAyCN,CAACC,UAAD,EAAYC,IAAZ,KAAqB;AAC7B,UAAIC,cAAc,GAAG,KAAKJ,KAAL,CAAWK,MAAX,CAAkBC,MAAlB,CAAyB,UAAUC,KAAV,EAAiB;AAC3D,eAAOA,KAAK,CAACC,UAAN,KAAqBN,UAArB,IAAmCK,KAAK,CAACE,UAAN,KAAqBN,IAA/D;AACD,OAFkB,CAArB;AAGE,aAAOC,cAAP;AAEL,KA/CiB;AAEjB;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CEM,EAAAA,MAAM,GAAG;AACL,UAAMC,kBAAkB,GAAC,KAAKX,KAAL,CAAWY,WAAX,CAAuBC,GAAvB,CAA2BC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgC;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCA,IAAI,CAACN,UAArC,iBAAgEM,IAAI,CAACL,UAArE,CAAhC,CAAL,eAA+H,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAEK,IAAI,CAACN,UAA7B;AAAyC,MAAA,MAAM,EAAE,KAAKP,SAAL,CAAea,IAAI,CAACN,UAApB,EAA+BM,IAAI,CAACL,UAApC,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/H,CAAnC,CAAzB;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAME,kBAAN,CAAP;AACH;;AAvD8C","sourcesContent":["import React, { Component } from 'react'\nimport Events from './Events'\n\nexport default class Tournaments extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n  /*   componentDidMount(){\n        console.log(\"i am mounted\");\n        const url = `http://www.localhost:8000/${this.state.sport}/`;\n        fetch(url, {\n            // mode: 'no-cors',\n            method: 'GET',\n            headers: {\n              Accept: 'application/json',\n            },\n          },\n        )\n        .then(response => {\n        if (response.ok) {\n        response.json().then(json => {\n        console.log(json);\n        this.setState({events:json});\n        var flags=[];\n        var uniqueTournaments = [];\n        var index;\n        for (index = 0; index < this.state.events.length; ++index) {\n            var event=this.state.events[index];\n            var uniqueCombination=this.state.events[index].event_type+this.state.events[index].event_name;\n            if (!flags[uniqueCombination]) {\n                flags[uniqueCombination] = true;\n                uniqueTournaments.push({'event_name':event.event_name,'event_type':event.event_type});\n            }\n        }\n    \n\n        this.setState({tournaments:uniqueTournaments})\n        console.log(this.state.tournaments);\n        });\n        }\n        });\n    }\n    */\n\n    getEvents = (tournament,type) => {\n        let filteredEvents = this.props.events.filter(function (event) {\n            return event.event_name === tournament && event.event_type === type;\n          });\n          return filteredEvents;\n\n    } \n\n\n    render() {    \n        const tournamentDivItems=this.props.tournaments.map(item => <div><div className=\"tournament_div\"><p className=\"tournament_name\">{item.event_name} &nbsp; &nbsp; {item.event_type}</p></div><Events tournamentName={item.event_name} events={this.getEvents(item.event_name,item.event_type)}/></div>);\n        return <div>{tournamentDivItems}</div>;\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module"}