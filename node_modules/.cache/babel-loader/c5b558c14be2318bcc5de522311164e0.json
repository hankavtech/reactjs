{"ast":null,"code":"var _jsxFileName = \"/home/kesha/Desktop/my-app/src/components/Tournaments.js\";\nimport React, { Component } from 'react';\nimport Events from './Events';\nimport _ from 'lodash';\nexport default class Tournaments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getEvents = (tournament, type) => {\n      let filteredEvents = this.state.events.filter(function (event) {\n        return event.event_name === tournament && event.event_type === type;\n      });\n      return filteredEvents;\n    };\n\n    this.state = {\n      tournaments: [],\n      events: [],\n      sport: ''\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"i am mounted\");\n    const url = \"http://www.localhost:8000/tennis/\";\n    fetch(url, {\n      // mode: 'no-cors',\n      method: 'GET',\n      headers: {\n        Accept: 'application/json'\n      }\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(json => {\n          console.log(json);\n          this.setState({\n            events: json\n          }); //const tournamentItems= [...new Set(json.map(item => item.event_name))];\n\n          var flags = [];\n          var uniqueTournaments = {};\n          var index;\n\n          for (index = 0; index < this.state.events.length; ++index) {\n            var event = this.state.events[index];\n            var uniqueCombination = this.state.events[index].event_type + this.state.events[index].event_name;\n\n            if (!flags[uniqueCombination]) {\n              flags[uniqueCombination] = true;\n              uniqueTournaments.push({\n                'event_name': event.event_name,\n                'event_type': event.event_type\n              });\n            }\n          }\n\n          this.setState({\n            tournaments: uniqueTournaments\n          });\n          console.log(this.state.tournaments);\n        });\n      }\n    });\n  }\n\n  render() {\n    const tournamentDivItems = this.state.tournaments.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tournament_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 74\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"tournament_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 106\n      }\n    }, item.event_name)), /*#__PURE__*/React.createElement(Events, {\n      tournamentName: item,\n      events: this.getEvents(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 164\n      }\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }\n    }, tournamentDivItems);\n  }\n\n}","map":{"version":3,"sources":["/home/kesha/Desktop/my-app/src/components/Tournaments.js"],"names":["React","Component","Events","_","Tournaments","constructor","props","getEvents","tournament","type","filteredEvents","state","events","filter","event","event_name","event_type","tournaments","sport","componentDidMount","console","log","url","fetch","method","headers","Accept","then","response","ok","json","setState","flags","uniqueTournaments","index","length","uniqueCombination","push","render","tournamentDivItems","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Events from './Events'\nimport _ from 'lodash'\n\nexport default class Tournaments extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={tournaments:[],events:[],sport:''}\n    }\n\n    componentDidMount(){\n        console.log(\"i am mounted\");\n        const url = \"http://www.localhost:8000/tennis/\";\n        fetch(url, {\n            // mode: 'no-cors',\n            method: 'GET',\n            headers: {\n              Accept: 'application/json',\n            },\n          },\n        )\n        .then(response => {\n        if (response.ok) {\n        response.json().then(json => {\n        console.log(json);\n        this.setState({events:json});\n        //const tournamentItems= [...new Set(json.map(item => item.event_name))];\n        var flags=[];\n        var uniqueTournaments = {};\n        var index;\n        for (index = 0; index < this.state.events.length; ++index) {\n            var event=this.state.events[index];\n            var uniqueCombination=this.state.events[index].event_type+this.state.events[index].event_name;\n            if (!flags[uniqueCombination]) {\n                flags[uniqueCombination] = true;\n                uniqueTournaments.push({'event_name':event.event_name,'event_type':event.event_type});\n            }\n        }\n    \n\n        this.setState({tournaments:uniqueTournaments})\n        console.log(this.state.tournaments);\n        });\n        }\n        });\n    }\n\n    getEvents = (tournament,type) => {\n        let filteredEvents = this.state.events.filter(function (event) {\n            return event.event_name === tournament && event.event_type === type;\n          });\n          return filteredEvents;\n\n    }\n\n\n    render() {    \n        const tournamentDivItems=this.state.tournaments.map(item => <div><div className=\"tournament_div\"><p className=\"tournament_name\">{item.event_name}</p></div><Events tournamentName={item} events={this.getEvents(item)}/></div>);\n        return <div>{tournamentDivItems}</div>;\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module"}